load("render.star", "render")
load("http.star", "http")
load("encoding/base64.star", "base64")
load("schema.star", "schema")
load("math.star", "math")
load("cache.star", "cache")
load("encoding/json.star", "json")
load("re.star", "re")

Tesla_Icon = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAAAXNSR0IArs4c6QAAAXVJREFUOE+dk7tKA0EUhv+Z1RiLoCnsAks0hdEVjQoqRhG1thXs9A0svDyCFwTFQivfwcLKBCHWQhJzUVCD2AkBCw0psnvkDO66u4kEnOrM5fvnnPPPCPhGJDLTHeqp1fzrmjBjhULh2b0u3JP48Cj5If+8XMw5jBO0A8myYBFB0zTYAgpuB/KZ1NaLSmJxT4f8ERB/1ehP92qzgq4OwtJ+FEKqO2+FfSsRcToYn5xGvV73sJxyQv9C9i3kWXdg0zTxWL5Xm0PGmHOIRdPbFSwf9jf10oFBhGRyFifHR0hMTEFKCQZTDB5EIYTHGCX0C9u6RCgVc1hZiOF8/R2n12FcZsMtHWyGAXCN6Z0Ka6P6qWH1TG8NG4YxYJL2ZNd2kenFxvwH+taqaDQaCAaDbCUCgU7ks3cqtktwfOaG3ey+qhu4OZZl4aGUx2B8BBBCxTx47vhs58OWsYAU0vbRaxeREmx6YW6Bf71tl0AGwFwrEfen4P1vSSueYQes1/cAAAAASUVORK5CYII=
""")

BOLT_GREY = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAAYAAAAHCAYAAAArkDztAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAYUlEQVQImWWNsQ1DIRDF/H4k9mCv64+RoL9xqFiAUV6qSFHi0pJl2ebDGMMAc049vxKQJLBNZjoz/V0rM917594LQERQVTyAAM05BVBVRMT/IyIE8Np7U1UGWGuptcY5hzdfLi2V01L0lQAAAABJRU5ErkJggg==
""")
BOLT = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAAYAAAAHCAYAAAArkDztAAAAAXNSR0IArs4c6QAAADtJREFUGFdjZEAC//8z/gdxGRn/MzLCxJEFwZIgAl0QLAES/P/akoFR9DhY89+/cxiYmVMgOrAZR7odAGbQIQYDTJS+AAAAAElFTkSuQmCC
""")

BOLT_ANIMATED=base64.decode("""
R0lGODlhBgAHAPcAAP//AP//Af7qOvz8ni4wAwEAAAAh+QQJCAAAACwAAAAABgAHAAAIGQABCAwQQCAAggYRDhRAcEDBgQ8PRlQIICAAIfkECQgAAAAsAAAAAAYABwCH//8A//8B/uo6/PydoAAQgMEEAgAAECDBJUSDDAgIIDIQJwyNBgQAAh+QQJCAAAACwAAAAABgAHAIf//wD//wH+6jrgABCAwQQCAAggYFCDBIsGHBgQMYPjwYUWBAACH5BAkIAAAALAAAAAAGAAcAh///AP//Af7qOvz8ngYAAEIDBBAIACCBhEKFMCwYcKCAwc8NBgQACH5BAkIAAAALAAAAAAGAAcAh///AP//Afz8nf7qOggaAAEIDBBAIAABBQcmBECw4cIBAwwSNIjQYEAAIfkECQgAAAAsAAAAAAYABwCH//8A//8B/Pyd/uosAAQgMIEAggAABDCJUKADhwoEJBQ4YoDAigIAAIfkECQgAAAAsAAAAAAYABwCH//8A//8B/Pyd/uo6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBoAAQgMEEAgAIIGAwhISLBhwoUDCwocMMBgQAAh+QQJCAAAACwAAAAABgAHAIf//wD+6jr//wwQQCAAAQIMChigEKHDhhAFLjQYEAAh+QQJCAAAACwAAAAABgAHAIf//wD//wH+6jrgABCAwQQCAAAQIMEjQ4gKBDhQMUFhw4EUBAADs
""")
def lightness(color, amount):
    hsl_color = rgb_to_hsl(*hex_to_rgb(color))
    hsl_color_list = list(hsl_color)
    hsl_color_list[2] = hsl_color_list[2] * amount
    hsl_color = tuple(hsl_color_list)
    return rgb_to_hex(*hsl_to_rgb(*hsl_color))

def rgb_to_hsl(r, g, b):
    r = float(r / 255)
    g = float(g / 255)
    b = float(b / 255)
    high = max(r, g, b)
    low = min(r, g, b)
    h, s, l = ((high + low) / 2,) * 3

    if high == low:
        h = 0.0
        s = 0.0
    else:
        d = high - low
        s = d / (2 - high - low) if l > 0.5 else d / (high + low)
        if high == r:
            h = (g - b) / d + (6 if g < b else 0)
        elif high == g:
            h = (b - r) / d + 2
        elif high == b:
            h = (r - g) / d + 4
        h /= 6

    return int(math.round(h * 360)), s, l

def hsl_to_rgb(h, s, l):
    def hue_to_rgb(p, q, t):
        if t < 0:
            t += 1
        if t > 1:
            t -= 1
        if t < 1 / 6:
            return p + (q - p) * 6 * t
        if t < 1 / 2:
            return q
        if t < 2 / 3:
            return p + (q - p) * (2 / 3 - t) * 6
        return p

    h = h / 360
    if s == 0:
        r, g, b = (l,) * 3  # achromatic
    else:
        q = l * (1 + s) if l < 0.5 else l + s - l * s
        p = 2 * l - q
        r = hue_to_rgb(p, q, h + 1 / 3)
        g = hue_to_rgb(p, q, h)
        b = hue_to_rgb(p, q, h - 1 / 3)

    return int(math.round(r * 255)), int(math.round(g * 255)), int(math.round(b * 255))

def hex_to_rgb(color):
    # Expand 4 digit hex to 7 digit hex
    if len(color) == 4:
        x = "([A-Fa-f0-9])"
        matches = re.match("#%s%s%s" % (x, x, x), color)
        rgb_hex_list = list(matches[0])
        rgb_hex_list.pop(0)
        for i in range(len(rgb_hex_list)):
            rgb_hex_list[i] = rgb_hex_list[i] + rgb_hex_list[i]
        color = "#" + "".join(rgb_hex_list)

    # Split hex into RGB
    x = "([A-Fa-f0-9]{2})"
    matches = re.match("#%s%s%s" % (x, x, x), color)
    rgb_hex_list = list(matches[0])
    rgb_hex_list.pop(0)
    for i in range(len(rgb_hex_list)):
        rgb_hex_list[i] = int(rgb_hex_list[i], 16)
    rgb = tuple(rgb_hex_list)

    return rgb

# Convert RGB tuple to hex
def rgb_to_hex(r, g, b):
    return "#" + str("%x" % ((1 << 24) + (r << 16) + (g << 8) + b))[1:]



def main(config):
    if config.str("api")==None:
            return render.Root(
            child = render.WrappedText("Please enter the API info!")
            )
    else:  


        rep_cache = cache.get("teslafi")
        if rep_cache != None:
            print("Hit! Displaying cached data.")
            rep = json.decode(rep_cache)
        else:
            print("Miss! Calling TeslaFI API.")
            rep = http.get("https://www.teslafi.com/feed.php?token="+config.str("api"))
            if rep.status_code != 200:
                fail("TeslaFi request failed with status:", rep.status_code)
            rep=rep.json()
            cache.set("teslafi",json.encode(rep), ttl_seconds=60)
        
        name=rep['display_name']
        rangemi=rep['est_battery_range']
        # print(rep)
        if(config.bool("mi2km")==True):
            rangemi=math.round((float(rangemi)*1.60934)*100)/100
        # battlevel=rep['battery_level']
        chargelimit=rep['charge_limit_soc']
        batterylevel=rep['usable_battery_level']
        chargingstate=rep['charging_state']

        # batterylevel="70"

        chargeColor=""
        barcolor="#0f0"
        if chargingstate!="Disconnected":
            image=BOLT_ANIMATED
            chargeColor="#00FF00"
            endcolor="#00ff00"
          
        else:
            image=BOLT_GREY
            endcolor="#808080"
        if int(batterylevel)<=10:
            chargeColor="#FF0000"
            barcolor="#FF0000"
        if int(batterylevel)<=20 and int(batterylevel) >10:
            chargeColor="#FFFF00"
            barcolor="#FFFF00"
        progresswidth = max(1, int(64 * int(batterylevel) / 100))


        progressfill = render.Row(
            main_align = "start",
            cross_align = "center",
            expanded = True,
            children = [
                render.Box(width = progresswidth, height = 7, color = lightness(barcolor, 0.18)),
                render.Box(width = 1, height = 7, color = endcolor),
            ],
        )

        label2component = render.Text(
            content = batterylevel+"%",
            color = barcolor,
            font = "tom-thumb",

        )


        return render.Root(
            delay = 500,
            child = render.Box(
                padding = 1,
                child = render.Column(
                    expanded = True,
                    main_align = "space_around",
                    cross_align = "center",
                    children = [
                        render.Row(
                            expanded = True,
                            main_align = "space_around",
                            children = [
                            render.Text("%s" % name, font = "", color = ""),
                            
                            ],
                        ),
                        
                        
                        # render.Row(
                        #     expanded = True,
                        #     main_align = "center",
                        #     children = [
                        #         render.Text("%s"%batterylevel,color = chargeColor),
                        #         render.Text("/",color = ""),
                        #         render.Text("%s%%" % chargelimit, font = "", color = "#e5a00d"),
                        #         render.Box(width = 8, height = 1),
                        #         render.Image(src=image),

                        #     ],
                        # ),
                    render.Row(
                            expanded = True,
                            main_align = "center",
                            children = [
                                render.Text("Range: "),
                                render.Box(width = 1, height = 1),
                                render.Text("%s" % rangemi, font = "", color = "#e5a00d"),
                            ],
                        ),
                        render.Row(
                            expanded = True,
                            main_align = "space_evenly",
                            cross_align = "center",
                            children = [
                                # labelcomponent,
                                render.Stack(
                                    children = [
                                        render.Row(
                                            main_align = "end",
                                            cross_align = "center",
                                            expanded = True,
                                            children = [
                                                render.Box(width = 64, height = 7, color = lightness("#808080", 0.18)),
                                            ],
                                        ),
                                        progressfill,
                                        render.Row(
                                            main_align = "start",
                                            cross_align = "center",
                                            expanded = True,
                                            children = [
                                                render.Box(width = 1, height = 8),
                                                label2component,
                                               
                                            ],
                                        ),
                                            render.Row(
                                            main_align = "end",
                                            cross_align = "center",
                                            expanded = True,
                                            children = [
                                # render.Text("%s%%" % chargelimit, font = "", color = "#e5a00d"),
                                # render.Box(width = 8, height = 1),
                                               render.Image(src=image),
                                               
                                            ],
                                        ),
                                         
                                    ],
                                ),
                                render.Box(width = 1, height = 8),
                            ],
                        ),
                      
                    ],
                ),
       
            ),
        )

def get_schema():
    return schema.Schema(
        version = "1",
        fields = [
            schema.Text(
                id = "api",
                name = "API Key",
                desc = "API Key for TeslaFi",
                icon = "arrowUpFromBracket",
            ),
            schema.Toggle(
                id = "mi2km",
                name = "Mi/KM",
                desc = "Convert to KM",
                icon = "codeFork",
                default = True,
            ),
        ],
    )